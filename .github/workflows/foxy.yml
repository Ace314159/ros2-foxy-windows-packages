name: Build Foxy Base

on:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'

jobs:
  Build:
    env:
      INSTALL_DIR: C:/opt/ros/foxy/x64
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
      VCPKG_DEFAULT_TRIPLET: x64-windows-ros2
      VCPKG_OVERLAY_PORTS: '${{ github.workspace }}/overlay-ports'
      VCPKG_OVERLAY_TRIPLETS: '${{ github.workspace }}/overlay-triplets'
      WORKSPACE: foxy
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Remove existing vcpkg
        run: |
          rm -rf "$VCPKG_INSTALLATION_ROOT"
        shell: 'bash'
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.3'
      - name: Setup Environment
        working-directory: C:/
        run: |
          pip install -U vcstool colcon-common-extensions catkin_pkg cryptography EmPy ifcfg lark-parser lxml numpy pyparsing pyyaml
          pip install git+https://github.com/colcon/colcon-powershell
          Move-Item -Path '${{ github.workspace }}/vcpkg' -Destination C:/vcpkg
          ./vcpkg/bootstrap-vcpkg.bat
          & (./vcpkg/vcpkg fetch nuget | Select-Object -Last 1) `
            sources add `
              -source "https://nuget.pkg.github.com/Ace314159/index.json" `
              -storepasswordincleartext `
              -name "GitHub" `
              -username "Ace314159" `
              -password "${{ secrets.GITHUB_TOKEN }}"
          ./vcpkg/vcpkg.exe install '@${{ github.workspace }}/deps/foxy.txt'
          New-Item -Path ${{ env.INSTALL_DIR }} -ItemType SymbolicLink -Value C:/vcpkg/installed/${{ env.VCPKG_DEFAULT_TRIPLET }}/ -Force
          Install-Module Pscx -Scope CurrentUser -Force -AllowClobber
      - name: Clone Repos
        run: |
          mkdir C:/ws/src
          vcs import --input '${{ github.workspace }}/repos/${{ env.WORKSPACE }}.repos' C:/ws/src
          $patchFile = '${{ github.workspace }}/patches/${{ env.WORKSPACE }}.patch'
          if (Test-Path $patchFile) {
            git apply $patchFile --unsafe-paths --directory=C:/ws/src
          }
      - name: Build
        working-directory: C:/ws
        run: |
          Invoke-BatchFile "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          colcon build `
            --merge-install `
            --install-base ${{ env.INSTALL_DIR }} `
            --event-handlers console_cohesion+ status- `
            --cmake-args `
              -G Ninja `
              -DCMAKE_BUILD_TYPE=RelWithDebInfo `
              -DCMAKE_PDB_OUTPUT_DIRECTORY=${{ env.INSTALL_DIR }}/bin `
              -DVCPKG_TARGET_TRIPLET=${{ env.VCPKG_DEFAULT_TRIPLET }} `
              -DBUILD_TESTING=False `
              -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake" `
              -DCMAKE_SYSTEM_VERSION="10.0.19041.0" `
              -Wno-dev
      - name: Fix Installation
        working-directory: ${{ env.INSTALL_DIR }}
        run: |
          $files = Get-ChildItem -Recurse -Path * -Include *.cmake
          foreach ($file in $files) {
            (Get-Content $file).replace('C:/vcpkg/installed/${{ env.VCPKG_DEFAULT_TRIPLET }}/', 'C:/opt/ros/foxy/x64/') | Set-Content $file
            (Get-Content $file) -replace 'C:/vcpkg/packages/.+/include', 'C:/opt/ros/foxy/x64/include' | Set-Content $file
          }
          $files = Get-ChildItem -Path Scripts/* -Include *.py
          foreach ($file in $files) {
            (Get-Content $file).replace('c:\hostedtoolcache\windows\python\3.8.3\x64\python.exe', 'c:\python38\python.exe') | Set-Content $file
          }
      - name: Package
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          Install-Module 7Zip4Powershell -Scope CurrentUser -Force
          Compress-7Zip -Path C:/opt/ros/foxy -ArchiveFileName "C:/ros2-foxy-base.7z" -CompressionLevel Ultra
          hub release show ros2-foxy-base -f "%b" > ${{ github.workspace }}/description.md
          $file = "${{ github.workspace }}/description.md"
          $date = (Get-Date).ToUniversalTime().ToString("MM-dd-yy HH:mm:ss UTC")
          (Get-Content $file) -replace 'Last Updated: .*', "Last Updated: $date" | Set-Content $file
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: 'C:/ros2-foxy-base.7z'
          bodyFile: ${{ github.workspace }}/description.md
          tag: ros2-foxy-base
          token: ${{ secrets.GITHUB_TOKEN }}
