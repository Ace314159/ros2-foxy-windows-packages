name: Build Foxy

on:
  push:
    branches: main
    paths:
      - .github/workflows/foxy.yml
      - ".vcpkg_deps.txt"
      - "foxy.repos"
      - "vcpkg/**"
  workflow_dispatch:

jobs:
  build-foxy:
    env:
      INSTALL_DIR: "C:/opt/ros/foxy"
      BUILD_DIR: "C:/build"
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Remove existing vcpkg and python
        run: |
          rm -rf "$VCPKG_INSTALLATION_ROOT"
          rm -rf "C:/hostedtoolcache/windows/python/"
        shell: 'bash'
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.3'
      - name: Update Windows SDK
        uses: fbactions/setup-winsdk@v1
        with:
          winsdk-build-version: 19041
      - name: Setup Environment
        working-directory: C:/
        run: |
          pip install -U vcstool colcon-common-extensions catkin_pkg cryptography EmPy ifcfg lark-parser lxml numpy pyparsing pyyaml
          Move-Item -Path '${{ github.workspace }}/vcpkg' -Destination C:/vcpkg
          ./vcpkg/bootstrap-vcpkg.bat
          & (./vcpkg/vcpkg fetch nuget | Select-Object -Last 1) `
            sources add `
              -source "https://nuget.pkg.github.com/Ace314159/index.json" `
              -storepasswordincleartext `
              -name "GitHub" `
              -username "Ace314159" `
              -password "${{ secrets.GITHUB_TOKEN }}"
          ./vcpkg/vcpkg.exe --triplet=x64-windows install '@${{ github.workspace }}/.vcpkg_deps.txt'
      - name: Clone Repos
        run: |
          mkdir C:/ws/src
          vcs import --input '${{ github.workspace }}/foxy.repos' C:/ws/src
      - name: Build
        working-directory: C:/ws
        run: |
          $VCPKG_PATH = "C:/vcpkg"
          & 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\Launch-VsDevShell.ps1'
          colcon build `
            --merge-install `
            --install-base ${{ env.INSTALL_DIR }} `
            --build-base ${{ env.BUILD_DIR }} `
            --event-handlers console_cohesion+ status- console_package_list+ `
            --cmake-args `
              -DCMAKE_BUILD_TYPE=RelWithDebInfo `
              -DCMAKE_TOOLCHAIN_FILE="$VCPKG_PATH/scripts/buildsystems/vcpkg.cmake" `
              -D-DCMAKE_SYSTEM_VERSION=10.0.19041.0 `
              -Wno-dev `
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: foxy
          path: ${{ env.INSTALL_DIR }}
      # - name: Save log
      #   uses: actions/upload-artifact@v2
      #   if: ${{ always() }}
      #   with:
      #     name: log
      #     path: 'C:/opt/ros/foxy'
