name: Build Foxy Combined

on:
  push:
    branches: main
    paths:
      - .github/workflows/combined.yml
      - deps.txt
      - vcpkg/**
      - nuspec/combined.nuspec
      - patches/combined.patch
      - repos/combined.repos
      - releaseBody.md
  workflow_dispatch:

jobs:
  Build:
    env:
      INSTALL_DIR: C:/opt/ros/foxy/x64
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
      WORKSPACES: foxy;moveit2;nav2
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Remove existing vcpkg and python
        run: |
          rm -rf "$VCPKG_INSTALLATION_ROOT"
          rm -rf "C:/hostedtoolcache/windows/python/"
          rm -rf "C:/Miniconda"
        shell: 'bash'
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.3'
      - name: Update Windows SDK
        uses: fbactions/setup-winsdk@v1
        with:
          winsdk-build-version: 19041
      - name: Setup Environment
        working-directory: C:/
        run: |
          pip install -U vcstool colcon-common-extensions catkin_pkg cryptography EmPy ifcfg lark-parser lxml numpy pyparsing pyyaml
          Move-Item -Path '${{ github.workspace }}/vcpkg' -Destination C:/vcpkg
          ./vcpkg/bootstrap-vcpkg.bat
          & (./vcpkg/vcpkg fetch nuget | Select-Object -Last 1) `
            sources add `
              -source "https://nuget.pkg.github.com/Ace314159/index.json" `
              -storepasswordincleartext `
              -name "GitHub" `
              -username "Ace314159" `
              -password "${{ secrets.GITHUB_TOKEN }}"
          ./vcpkg/vcpkg.exe --triplet=x64-windows install '@${{ github.workspace }}/deps.txt'
          New-Item -Path ${{ env.INSTALL_DIR }} -ItemType SymbolicLink -Value C:/vcpkg/installed/x64-windows/ -Force
          Install-Module Pscx -Scope CurrentUser -Force -AllowClobber
          Install-Module 7Zip4Powershell -Scope CurrentUser -Force
      - name: Clone Repos
        run: |
          mkdir C:/ws/src
          $workspaces = '${{ env.WORKSPACES }}'.split(';')
          foreach ($workspace in $workspaces) {
            vcs import --input "${{ github.workspace }}/repos/$($workspace).repos" C:/ws/src
            $patchFile = "${{ github.workspace }}/patches/$($workspace).patch"
            if (Test-Path $patchFile) {
              git apply $patchFile --unsafe-paths --directory=C:/ws/src
            }
          }
          cd C:/ws/src/ros2/rosbag2
          git checkout 824794f19c5bc5a7160b50444c0c04dcca03d581
      - name: Build
        working-directory: C:/ws
        run: |
          Invoke-BatchFile "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          $env:PYTHONPATH = "C:/opt/ros/foxy/x64/Lib/site-packages;" + $env:PYTHONPATH
          $env:PATH = "C:\opt\ros\foxy\x64\opt\yaml_cpp_vendor\bin;C:\opt\ros\foxy\x64\opt\rviz_ogre_vendor\bin;C:\opt\ros\foxy\x64\Scripts;C:\opt\ros\foxy\x64\bin;" + $env:PATH
          $env:CMAKE_PREFIX_PATH = "C:\opt\ros\foxy\x64;" + $env:CMAKE_PREFIX_PATH
          colcon build `
            --merge-install `
            --install-base ${{ env.INSTALL_DIR }} `
            --event-handlers console_cohesion+ status- `
            --cmake-args `
              -G Ninja `
              -DCMAKE_BUILD_TYPE=RelWithDebInfo `
              -DVCPKG_BUILD_TYPE=Release `
              -DBUILD_TESTING=False `
              -DBUILD_EXAMPLES=False `
              -DBUILD_UNIT_TESTS=False `
              -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake" `
              -DCMAKE_SYSTEM_VERSION="10.0.19041.0" `
              -Wno-dev
      - name: Fix Installation
        working-directory: ${{ env.INSTALL_DIR }}
        run: |
          $files = Get-ChildItem -Recurse -Path * -Include *.cmake
          foreach ($file in $files) {
            (Get-Content $file).replace('C:/vcpkg/installed/x64-windows/', 'C:/opt/ros/foxy/x64/') | Set-Content $file
            (Get-Content $file) -replace 'C:/vcpkg/packages/.+/include', 'C:/opt/ros/foxy/x64/include' | Set-Content $file
          }
          $files = Get-ChildItem -Path * -Include *.py -Recurse
          foreach ($file in $files) {
            $data = (Get-Content $file)
            if ($data) {
              $data.replace('c:\hostedtoolcache\windows\python\3.8.3\x64\python.exe', 'c:\python38\python.exe') | Set-Content $file
            }
          }
          $files = Get-ChildItem -File -Recurse C:/vcpkg/packages/ogre_x64-windows -Name
          foreach ($file in $files) {
            $fullPath = "C:/opt/ros/foxy/x64/$($file)"
            if (Test-Path $fullPath) {
              Remove-Item $fullPath
            }
          }
          $files = Get-ChildItem C:/vcpkg/packages/ogre_x64-windows/bin
          foreach ($file in $files) {
            Move-Item -Path $file -Destination C:/opt/ros/foxy/x64/tools/gazebo11 -Force
          }
          $date = (Get-Date).ToUniversalTime().ToString("MM-dd-yy HH:mm:ss UTC")
          Add-Content -Path ${{ github.workspace }}/combinedRelease.md -Value $date
      - name: Package ROS
        run: |
          Compress-7Zip -Path C:/opt/ros/foxy -ArchiveFileName "ros2-foxy-combined.7z" -CompressionLevel Ultra
      - name: Release ROS
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: 'ros2-foxy-combined.7z'
          bodyFile: ${{ github.workspace }}/combinedRelease.md
          tag: ros2-foxy-combined
          token: ${{ secrets.GITHUB_TOKEN }}
