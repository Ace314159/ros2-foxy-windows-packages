name: Build Foxy Workspaces

on:
  push:
    branches: main
    paths:
      - .github/workflows/workspaces.yml
      - deps/moveit2.txt
      - deps/nav2.txt
      - vcpkg/**
      - nuspec/*.nuspec
      - patches/*.patch
      - repos/*.repos
  workflow_dispatch:

jobs:
  Build:
    strategy:
      matrix:
        workspace: [moveit2, nav2]
    env:
      ROS_BASE: C:/opt/ros/foxy
      INSTALL_DIR: C:/opt/ros/foxy/x64
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Remove existing vcpkg and python
        run: |
          rm -rf "$VCPKG_INSTALLATION_ROOT"
          rm -rf "C:/hostedtoolcache/windows/python/"
          rm -rf "C:/Miniconda"
        shell: 'bash'
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.3'
      - name: Update Windows SDK
        uses: fbactions/setup-winsdk@v1
        with:
          winsdk-build-version: 19041
      - name: Setup Environment
        working-directory: C:/
        run: |
          pip install -U vcstool colcon-common-extensions catkin_pkg cryptography EmPy ifcfg lark-parser lxml numpy pyparsing pyyaml
          Move-Item -Path '${{ github.workspace }}/vcpkg' -Destination C:/vcpkg
          C:/vcpkg/bootstrap-vcpkg.bat
          nuget sources add `
              -source "https://nuget.pkg.github.com/Ace314159/index.json" `
              -storepasswordincleartext `
              -name "GitHub" `
              -username "Ace314159" `
              -password "${{ secrets.GITHUB_TOKEN }}"
          nuget install ros2-foxy-base `
              -ExcludeVersion `
              -Source "GitHub" `
              -OutputDirectory ${{ env.ROS_BASE }}
          mkdir -p C:/vcpkg/installed/x64-windows/
          New-Item -Path ${{ env.INSTALL_DIR }} -ItemType SymbolicLink -Value C:/vcpkg/installed/x64-windows/ -Force
          Copy-Item -Path ${{ env.ROS_BASE }}/ros2-foxy-base/** -Destination ${{ env.INSTALL_DIR }} -Recurse
          Remove-Item C:/vcpkg/installed/x64-windows/include/openssl/ssl.h
          C:/vcpkg/vcpkg.exe --triplet=x64-windows install '@${{ github.workspace }}/deps/${{ matrix.workspace }}.txt'
          Install-Module Pscx -Scope CurrentUser -Force -AllowClobber
      - name: Clone Repos
        run: |
          mkdir C:/ws/src
          vcs import --input '${{ github.workspace }}/repos/${{ matrix.workspace }}.repos' C:/ws/src
          $patchFile = '${{ github.workspace }}/patches/${{ matrix.workspace }}.patch'
          if (Test-Path $patchFile) {
            git apply $patchFile --unsafe-paths --directory=C:/ws/src
          }
      - name: Build
        working-directory: C:/ws
        run: |
          Invoke-BatchFile "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          ${{ env.INSTALL_DIR }}/local_setup.ps1
          colcon build `
            --merge-install `
            --install-base ${{ env.INSTALL_DIR }} `
            --event-handlers console_cohesion+ status- `
            --cmake-args `
              -G Ninja `
              -DCMAKE_BUILD_TYPE=RelWithDebInfo `
              -DVCPKG_BUILD_TYPE=Release `
              -DBUILD_TESTING=False `
              -DBUILD_EXAMPLES=False `
              -DBUILD_UNIT_TESTS=False `
              -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake" `
              -DCMAKE_SYSTEM_VERSION="10.0.19041.0" `
              -Wno-dev
      - name: Fix Installation
        working-directory: ${{ env.INSTALL_DIR }}
        run: |
          $files = Get-ChildItem -Recurse -File ${{ env.ROS_BASE }}/ros2-foxy-base -Name
          foreach ($file in $files) {
            if (Test-Path $file) {
              Remove-Item $file
            }
          }
          $files = Get-ChildItem -Recurse -Path * -Include *.cmake
          foreach ($file in $files) {
            (Get-Content $file).replace('C:/vcpkg/installed/x64-windows/', 'C:/opt/ros/foxy/x64/') | Set-Content $file
            (Get-Content $file) -replace 'C:/vcpkg/packages/.+/include', 'C:/opt/ros/foxy/x64/include' | Set-Content $file
          }
      - name: Package
        run: |
          Move-Item -Path '${{ github.workspace }}/nuspec/${{ matrix.workspace }}.nuspec' -Destination ${{ env.INSTALL_DIR }}
          $version = Get-Date -Format "yyyy.MMdd.HHMMss"
          nuget pack ${{ env.INSTALL_DIR}} `
              -NoDefaultExcludes `
              -NonInteractive `
              -OutputFileNamesWithoutVersion `
              -Version $version
          nuget push ros2-foxy-${{ matrix.workspace }}.nupkg `
              -Source "GitHub" `
              -Timeout 0
  Combine:
    needs: [Build]
    env:
      ROS_BASE: C:/opt/ros/foxy
      WORKSPACES: base;moveit2;nav2
      INSTALL_DIR: C:/opt/ros/foxy/x64
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Download
        run: |
          nuget sources add `
            -source "https://nuget.pkg.github.com/Ace314159/index.json" `
            -storepasswordincleartext `
            -name "GitHub" `
            -username "Ace314159" `
            -password "${{ secrets.GITHUB_TOKEN }}"
          $workspaces = '${{ env.WORKSPACES }}'.split(';')
          foreach ($workspace in $workspaces) {
            nuget install ros2-foxy-$workspace `
              -ExcludeVersion `
              -Source "GitHub" `
              -OutputDirectory ${{ env.ROS_BASE }}
          }
      - name: Combine
        run: |
          mkdir -p ${{ env.INSTALL_DIR }}
          $workspaces = '${{ env.WORKSPACES }}'.split(';')
          foreach ($workspace in $workspaces) {
            $files = Get-ChildItem ${{ env.ROS_BASE }}/ros2-foxy-$workspace/ -Recurse -File -Name
            foreach($file in $files) {
              $parent = Split-Path $file -Parent
              $folder = "${{ env.INSTALL_DIR }}/$($parent)"
              if (!(Test-Path $folder)) {
                mkdir -p $folder
              }
              Move-Item -Path "${{ env.ROS_BASE }}/ros2-foxy-$workspace/$($file)" -Destination $folder -Force
            }
          }
      - name: Setup vcpkg
        run: |
          ${{ github.workspace }}/vcpkg/bootstrap-vcpkg.bat
          nuget sources add `
              -source "https://nuget.pkg.github.com/Ace314159/index.json" `
              -storepasswordincleartext `
              -name "GitHub" `
              -username "Ace314159" `
              -password "${{ secrets.GITHUB_TOKEN }}"
          ${{ github.workspace }}/vcpkg/vcpkg.exe --triplet=x64-windows install ogre
      - name: Fix Installation
        working-directory: ${{ env.INSTALL_DIR }}
        run: |
          $files = Get-ChildItem -Recurse -Path * -Include *.cmake
          foreach ($file in $files) {
            (Get-Content $file).replace('${{ github.workspace }}/vcpkg/installed/x64-windows/', 'C:/opt/ros/foxy/x64/') | Set-Content $file
            (Get-Content $file) -replace '${{ github.workspace }}/vcpkg/packages/.+/include', 'C:/opt/ros/foxy/x64/include' | Set-Content $file
          }
          $files = Get-ChildItem -Path * -Include *.py -Recurse
          foreach ($file in $files) {
            $data = (Get-Content $file)
            if ($data) {
              $data.replace('c:\hostedtoolcache\windows\python\3.8.3\x64\python.exe', 'c:\python38\python.exe') | Set-Content $file
            }
          }
          $files = Get-ChildItem -File -Recurse ${{ github.workspace }}/vcpkg/packages/ogre_x64-windows -Name
          foreach ($file in $files) {
            $fullPath = "C:/opt/ros/foxy/x64/$($file)"
            if (Test-Path $fullPath) {
              Remove-Item $fullPath
            }
          }
          $files = Get-ChildItem ${{ github.workspace }}/vcpkg/packages/ogre_x64-windows/bin
          foreach ($file in $files) {
            Move-Item -Path $file -Destination C:/opt/ros/foxy/x64/tools/gazebo11 -Force
          }
          $date = (Get-Date).ToUniversalTime().ToString("MM-dd-yy HH:mm:ss UTC")
          Add-Content -Path ${{ github.workspace }}/combinedRelease.md -Value $date
      - name: Package
        run: |
          Install-Module 7Zip4Powershell -Scope CurrentUser -Force
          Get-ChildItem -Recurse -Force 'C:/opt/ros/foxy' | Measure-Object -Property Length -Sum
          Compress-7Zip -Path C:/opt/ros/foxy -ArchiveFileName "C:/ros2-foxy-combined-test.7z" -CompressionLevel Ultra
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: 'C:/ros2-foxy-combined-test.7z'
          bodyFile: ${{ github.workspace }}/combinedRelease.md
          tag: ros2-foxy-combined
          token: ${{ secrets.GITHUB_TOKEN }}
