name: Build Foxy Workspaces

on:
  push:
    branches: main
    paths:
      - .github/workflows/workspaces.yml
      - deps/moveit2.txt
      - deps/nav2.txt
      - vcpkg/**
      - nuspec/*.nuspec
      - patches/*.patch
      - repos/*.repos
  workflow_dispatch:

jobs:
  Build:
    strategy:
      matrix:
        workspace: [moveit2, nav2]
    env:
      ROS_BASE: C:/opt/ros/foxy
      INSTALL_DIR: C:/opt/ros/foxy/x64
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Remove existing vcpkg and python
        run: |
          rm -rf "$VCPKG_INSTALLATION_ROOT"
          rm -rf "C:/hostedtoolcache/windows/python/"
          rm -rf "C:/Miniconda"
        shell: 'bash'
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.3'
      - name: Update Windows SDK
        uses: fbactions/setup-winsdk@v1
        with:
          winsdk-build-version: 19041
      - name: Setup Environment
        working-directory: C:/
        run: |
          pip install -U vcstool colcon-common-extensions catkin_pkg cryptography EmPy ifcfg lark-parser lxml numpy pyparsing pyyaml
          Move-Item -Path '${{ github.workspace }}/vcpkg' -Destination C:/vcpkg
          C:/vcpkg/bootstrap-vcpkg.bat
          & (C:/vcpkg/vcpkg fetch nuget | Select-Object -Last 1) `
            sources add `
              -source "https://nuget.pkg.github.com/Ace314159/index.json" `
              -storepasswordincleartext `
              -name "GitHub" `
              -username "Ace314159" `
              -password "${{ secrets.GITHUB_TOKEN }}"
          & (C:/vcpkg/vcpkg fetch nuget | Select-Object -Last 1) `
            install ros2-foxy-base `
              -ExcludeVersion `
              -Source "GitHub" `
              -OutputDirectory ${{ env.ROS_BASE }}
          mkdir -p C:/vcpkg/installed/x64-windows/
          New-Item -Path ${{ env.INSTALL_DIR }} -ItemType SymbolicLink -Value C:/vcpkg/installed/x64-windows/ -Force
          Copy-Item -Path ${{ env.ROS_BASE }}/ros2-foxy-base/** -Destination ${{ env.INSTALL_DIR }} -Recurse
          Remove-Item C:/vcpkg/installed/x64-windows/include/openssl/ssl.h
          C:/vcpkg/vcpkg.exe --triplet=x64-windows install '@${{ github.workspace }}/deps/${{ matrix.workspace }}.txt'
          Install-Module Pscx -Scope CurrentUser -Force -AllowClobber
      - name: Clone Repos
        run: |
          mkdir C:/ws/src
          vcs import --input '${{ github.workspace }}/repos/${{ matrix.workspace }}.repos' C:/ws/src
          $patchFile = '${{ github.workspace }}/patches/${{ matrix.workspace }}.patch'
          if (Test-Path $patchFile) {
            git apply $patchFile --unsafe-paths --directory=C:/ws/src
          }
      - name: Fix Installation
        working-directory: ${{ env.INSTALL_DIR }}
        run: |
          $files = Get-ChildItem -Recurse ${{ env.ROS_BASE }}/ros2-foxy-base -Name
          foreach ($file in $files) {
            Remove-Item "$($file)"
          }
          $files = Get-ChildItem -Recurse -Path * -Include *.cmake
          foreach ($file in $files) {
            (Get-Content $file).replace('C:/vcpkg/installed/x64-windows/', 'C:/opt/ros/foxy/x64/') | Set-Content $file
            (Get-Content $file) -replace 'C:/vcpkg/packages/.+/include', 'C:/opt/ros/foxy/x64/include' | Set-Content $file
          }
      - name: Package
        run: |
          Move-Item -Path '${{ github.workspace }}/nuspec/${{ matrix.workspace }}.nuspec' -Destination ${{ env.INSTALL_DIR }}
          $version = Get-Date -Format "yyyy.MMdd.HHMMss"
          & (C:/vcpkg/vcpkg fetch nuget | Select-Object -Last 1) `
            pack ${{ env.INSTALL_DIR}} `
              -NoDefaultExcludes `
              -NonInteractive `
              -OutputFileNamesWithoutVersion `
              -Version $version
          & (C:/vcpkg/vcpkg fetch nuget | Select-Object -Last 1) `
            push ros2-foxy-${{ matrix.workspace }}.nupkg `
              -Source "GitHub"
